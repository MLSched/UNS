syntax = "proto3";
package pb_gen;

option go_package = "UNS/pb_gen/objects";

message Job {
  string jobID = 1;
  string description = 2;
  TaskGroup taskGroup = 3;

  bytes extra = 255;
}

message Task {
  string taskID = 1;
  string description = 2;

  bytes extra = 255;
}

enum TaskGroupType {
  single = 0;
  independent = 1;
  gang = 2;
  DAG = 3;
}

message TaskGroup {
  TaskGroupType taskGroupType = 1;
  repeated Task tasks = 2;
}

message IndependentTaskGroup {
  TaskGroupType taskGroupType = 1;
  repeated Task tasks = 2;

  bytes extra = 255;
}

message GangTaskGroup {
  TaskGroupType taskGroupType = 1;
  repeated Task tasks = 2;

  bytes extra = 255;
}

message DAGTaskGroup {
  TaskGroupType taskGroupType = 1;
  repeated Task tasks = 2;
  map<int64, int64> taskID2Priorities = 3;

  bytes extra = 255;
}

message Cluster {
  string resourceManagerID = 1;
  string description = 2;
  repeated Partition partitions = 3;

  bytes extra = 255;
}

message Partition {
  string partitionID = 1;
  string description = 2;
  repeated Node nodes = 3;

  bytes extra = 255;
}

message Node {
  string nodeID = 1;
  string description = 2;
  repeated CPUSocket CPUSockets = 3;

  bytes extra = 255;
}

message CPUSocket {
  string CPUSocketID = 1;
  string description = 2;
  CPU CPU = 3;
  HostMemory hostMemory = 4;
  repeated Accelerator accelerators = 5;

  bytes extra = 255;
}

message CPU {
  string CPUID = 1;
  string description = 2;

  bytes extra = 255;
}

message HostMemory {
  int64 bytesCapacity = 1;
  float frequencyMHz = 2;
  float bandwidthGBPerSec = 3;

  bytes extra = 255;
}

message CPUMetaInfo {
  string model = 1;
  int64 cores = 2;
  float frequencyGHz = 3;
  float IPC = 4;

  bytes extra = 255;
}

message Accelerator {
  string acceleratorID = 1;
  string description = 2;

  AcceleratorMetaInfo acceleratorMetaInfo = 3;

  bytes extra = 255;
}

message AcceleratorMetaInfo {
  string briefType = 1;
  AcceleratorMemory acceleratorMemory = 2;
  float flops = 3;
  string manufacturer = 4;

  bytes extra = 255;
}

message AcceleratorMemory {
  int64 bytesCapacity = 1;
  float frequencyMHz = 2;
  float bandwidthGBPerSec = 3;

  bytes extra = 255;
}

message JobAllocation {
  Job job = 1;
  string resourceManagerID = 2;
  string partitionID = 3;
  repeated TaskAllocation taskAllocations = 4;
  bool finished = 5;

  bytes extra = 255;
}

message TaskAllocation {
  string taskAllocationID = 1;
  Node node = 2;
  Task task = 3;
  HostMemoryAllocation hostMemoryAllocation = 4;
  repeated CPUSocketAllocation CPUSocketAllocations = 5;
  AcceleratorAllocation acceleratorAllocation = 6;
  float startTimeStampSecond = 7;
  float durationSecond = 8;
  bool placeholder = 9;
  bool finished = 10;

  bytes extra = 255;
}

message CPUSocketAllocation {
  string CPUSocketID = 1;
  int64 cores = 2;

  bytes extra = 255;
}

message HostMemoryAllocation {
  int64 allocatedBytesCapacity = 1;

  bytes extra = 255;
}

message AcceleratorAllocation {
  string acceleratorID = 1;

  bytes extra = 255;
}